"use strict";(self.webpackChunkfirehose=self.webpackChunkfirehose||[]).push([[26],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return c}});var i=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=i.createContext({}),u=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=u(e.components);return i.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=u(n),c=l,f=m["".concat(p,".").concat(c)]||m[c]||d[c]||a;return n?i.createElement(f,r(r({ref:t},s),{},{components:n})):i.createElement(f,r({ref:t},s))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,r=new Array(a);r[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var u=2;u<a;u++)r[u]=n[u];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9571:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return c},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return d}});var i=n(7462),l=n(3366),a=(n(7294),n(3905)),r=["components"],o={},p="Filters",u={unversionedId:"advance/filters",id:"advance/filters",title:"Filters",description:"Following variables need to be set to enable JSON/JEXL filters.",source:"@site/docs/advance/filters.md",sourceDirName:"advance",slug:"/advance/filters",permalink:"/firehose/advance/filters",draft:!1,editUrl:"https://github.com/goto/firehose/edit/master/docs/docs/advance/filters.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"DLQ",permalink:"/firehose/advance/dlq"},next:{title:"Retries",permalink:"/firehose/advance/retries"}},s={},d=[{value:"<code>FILTER_ENGINE</code>",id:"filter_engine",level:2},{value:"<code>FILTER_JSON_ESB_MESSAGE_TYPE</code>",id:"filter_json_esb_message_type",level:2},{value:"<code>FILTER_SCHEMA_PROTO_CLASS</code>",id:"filter_schema_proto_class",level:2},{value:"<code>FILTER_DATA_SOURCE</code>",id:"filter_data_source",level:2},{value:"<code>FILTER_JEXL_EXPRESSION</code>",id:"filter_jexl_expression",level:2},{value:"<code>FILTER_JSON_SCHEMA</code>",id:"filter_json_schema",level:2},{value:"<code>FILTER_TIMESTAMP_PROTO_FIELD_NAME</code>",id:"filter_timestamp_proto_field_name",level:2},{value:"<code>FILTER_TIMESTAMP_PAST_WINDOW_SECONDS</code>",id:"filter_timestamp_past_window_seconds",level:2},{value:"<code>FILTER_TIMESTAMP_FUTURE_WINDOW_SECONDS</code>",id:"filter_timestamp_future_window_seconds",level:2},{value:"<code>FILTER_DROP_DESERIALIZATION_ERROR</code>",id:"filter_drop_deserialization_error",level:2}],m={toc:d};function c(e){var t=e.components,n=(0,l.Z)(e,r);return(0,a.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"filters"},"Filters"),(0,a.kt)("p",null,"Following variables need to be set to enable JSON/JEXL filters."),(0,a.kt)("h2",{id:"filter_engine"},(0,a.kt)("inlineCode",{parentName:"h2"},"FILTER_ENGINE")),(0,a.kt)("p",null,"Defines whether to use ",(0,a.kt)("inlineCode",{parentName:"p"},"JSON")," Schema-based filters or ",(0,a.kt)("inlineCode",{parentName:"p"},"JEXL"),"-based filters or ",(0,a.kt)("inlineCode",{parentName:"p"},"NO_OP")," ","(","i.e. no filtering",")"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"JSON")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional")),(0,a.kt)("li",{parentName:"ul"},"Default value",(0,a.kt)("inlineCode",{parentName:"li"},": NO_OP"))),(0,a.kt)("h2",{id:"filter_json_esb_message_type"},(0,a.kt)("inlineCode",{parentName:"h2"},"FILTER_JSON_ESB_MESSAGE_TYPE")),(0,a.kt)("p",null,"Defines the format type of the input ESB messages, i.e. JSON/Protobuf. This field is required only for JSON filters."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"JSON")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional"))),(0,a.kt)("h2",{id:"filter_schema_proto_class"},(0,a.kt)("inlineCode",{parentName:"h2"},"FILTER_SCHEMA_PROTO_CLASS")),(0,a.kt)("p",null,"The fully qualified name of the proto schema so that the key/message in Kafka could be parsed."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"com.gojek.esb.driverlocation.DriverLocationLogKey")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional"))),(0,a.kt)("h2",{id:"filter_data_source"},(0,a.kt)("inlineCode",{parentName:"h2"},"FILTER_DATA_SOURCE")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"key"),"/",(0,a.kt)("inlineCode",{parentName:"p"},"message"),"/",(0,a.kt)("inlineCode",{parentName:"p"},"none"),"depending on where to apply filter"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"key")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional")),(0,a.kt)("li",{parentName:"ul"},"Default value",(0,a.kt)("inlineCode",{parentName:"li"},": none"))),(0,a.kt)("h2",{id:"filter_jexl_expression"},(0,a.kt)("inlineCode",{parentName:"h2"},"FILTER_JEXL_EXPRESSION")),(0,a.kt)("p",null,"JEXL filter expression"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},'driverLocationLogKey.getVehicleType()=="BIKE"')),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional"))),(0,a.kt)("h2",{id:"filter_json_schema"},(0,a.kt)("inlineCode",{parentName:"h2"},"FILTER_JSON_SCHEMA")),(0,a.kt)("p",null,"JSON Schema string containing the filter rules to be applied."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},'{"properties":{"order_number":{"const":"1253"}}}')),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional"))),(0,a.kt)("h2",{id:"filter_timestamp_proto_field_name"},(0,a.kt)("inlineCode",{parentName:"h2"},"FILTER_TIMESTAMP_PROTO_FIELD_NAME")),(0,a.kt)("p",null,"Field name containing the timestamp for timestamp-based filtering."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"event_timestamp")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional")),(0,a.kt)("li",{parentName:"ul"},"Default value: ",(0,a.kt)("inlineCode",{parentName:"li"},"event_timestamp"))),(0,a.kt)("h2",{id:"filter_timestamp_past_window_seconds"},(0,a.kt)("inlineCode",{parentName:"h2"},"FILTER_TIMESTAMP_PAST_WINDOW_SECONDS")),(0,a.kt)("p",null,"Time window in seconds for past timestamps. Messages with timestamps older than (current_time - past_window) will be filtered out."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"86400")," (1 day)"),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional")),(0,a.kt)("li",{parentName:"ul"},"Default value: ",(0,a.kt)("inlineCode",{parentName:"li"},"604800")," (7 days)")),(0,a.kt)("h2",{id:"filter_timestamp_future_window_seconds"},(0,a.kt)("inlineCode",{parentName:"h2"},"FILTER_TIMESTAMP_FUTURE_WINDOW_SECONDS")),(0,a.kt)("p",null,"Time window in seconds for future timestamps. Messages with timestamps newer than (current_time + future_window) will be filtered out."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"3600")," (1 hour)"),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional")),(0,a.kt)("li",{parentName:"ul"},"Default value: ",(0,a.kt)("inlineCode",{parentName:"li"},"604800")," (7 days)")),(0,a.kt)("h2",{id:"filter_drop_deserialization_error"},(0,a.kt)("inlineCode",{parentName:"h2"},"FILTER_DROP_DESERIALIZATION_ERROR")),(0,a.kt)("p",null,"Whether to drop messages with deserialization errors when using timestamp filter."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"false")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional")),(0,a.kt)("li",{parentName:"ul"},"Default value: ",(0,a.kt)("inlineCode",{parentName:"li"},"true"))))}c.isMDXComponent=!0}}]);